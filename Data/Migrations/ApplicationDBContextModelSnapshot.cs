// <auto-generated />
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.Model.AdDetailInfo", b =>
                {
                    b.Property<int>("AdDetailInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdDetailInfoId"));

                    b.Property<string>("AdId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AdInfoId")
                        .HasColumnType("int");

                    b.Property<string>("ContactInfo1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactInfo2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactInfo3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentVi")
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("Images")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateInfoId")
                        .HasColumnType("int");

                    b.Property<string>("StoreAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleVi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdDetailInfoId");

                    b.HasIndex("AdInfoId")
                        .IsUnique();

                    b.HasIndex("StateInfoId");

                    b.ToTable("AdDetailInfos");
                });

            modelBuilder.Entity("Data.Model.AdInfo", b =>
                {
                    b.Property<int>("AdInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdInfoId"));

                    b.Property<string>("AdId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateInfoId")
                        .HasColumnType("int");

                    b.Property<string>("StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdInfoId");

                    b.HasIndex("StateInfoId");

                    b.ToTable("AdInfos");
                });

            modelBuilder.Entity("Data.Model.StateInfo", b =>
                {
                    b.Property<int>("StateInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateInfoId"));

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StateInfoId");

                    b.ToTable("StateInfos");
                });

            modelBuilder.Entity("Data.Model.AdDetailInfo", b =>
                {
                    b.HasOne("Data.Model.AdInfo", "AdInfo")
                        .WithOne("AdDetailInfo")
                        .HasForeignKey("Data.Model.AdDetailInfo", "AdInfoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Data.Model.StateInfo", "StateInfo")
                        .WithMany("AdDetailInfos")
                        .HasForeignKey("StateInfoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AdInfo");

                    b.Navigation("StateInfo");
                });

            modelBuilder.Entity("Data.Model.AdInfo", b =>
                {
                    b.HasOne("Data.Model.StateInfo", "StateInfo")
                        .WithMany("AdInfos")
                        .HasForeignKey("StateInfoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("StateInfo");
                });

            modelBuilder.Entity("Data.Model.AdInfo", b =>
                {
                    b.Navigation("AdDetailInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Model.StateInfo", b =>
                {
                    b.Navigation("AdDetailInfos");

                    b.Navigation("AdInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
